#pragma once

#include "mh2Types.h"

enum eExecStage {
	EXEC_STAGE_WHITE,
	EXEC_STAGE_YELLOW,
	EXEC_STAGE_RED,
	EXEC_STAGE_JUMP,
	NUM_EXEC_STAGES
};

enum eExecuteAnimClass {
	EXEC_ANIM_BAG,
	EXEC_ANIM_SHARD,
	EXEC_ANIM_CROWBAR,
	EXEC_ANIM_BAT,
	EXEC_ANIM_SICKLE,
	EXEC_ANIM_WIRE,
	EXEC_ANIM_CLEAVER,
	EXEC_ANIM_ICEAXE,
	EXEC_ANIM_SMALL_BAT,
	EXEC_ANIM_HAMMER,
	EXEC_ANIM_CHAINSAW,
	EXEC_ANIM_SYRINGE,
	EXEC_ANIM_SHOVEL,
	EXEC_ANIM_SLEDGEHAMMER,
	EXEC_ANIM_STUNPROD,
	EXEC_ANIM_PEN,
	EXEC_ANIM_ACID_BOTTLE,
	EXEC_ANIM_1H_FIREARM,
	EXEC_ANIM_2H_FIREARM,
	EXEC_ANIM_CUT_THROAT_RAZOR,
	EXEC_ANIM_BLOWTORCH,
	EXEC_ANIM_MACE,
	EXEC_ANIM_HEDGE_TRIMMER,
	EXEC_ANIM_METAL_HOOK,
	EXEC_ANIM_CIRCULAR_SAW,
	EXEC_ANIM_NEWSPAPER,
	EXEC_ANIM_MILKBOTTLE,
	EXEC_ANIM_DILDO,
	EXEC_ANIM_KATANA,
	EXEC_ANIM_HACKSAW,
	EXEC_ANIM_PLIERS,
	EXEC_ANIM_6SHOOTER,
	EXEC_ANIM_ASSAULT_RIFLE,
	EXEC_ANIM_CROSSBOW,
	EXEC_ANIM_FLAREGUN,
	EXEC_ANIM_SHOTGUN_AND_DOUBLE_BARREL_SHOTGUN,
	EXEC_ANIM_TRANQ_GUN,
	EXEC_ANIM_UZI,
	EXEC_ANIM_FLASHLIGHT,
	EXEC_ANIM_FIRE_AXE,
	EXEC_ANIM_FAILED_ATTEMPT,
	EXEC_ANIM_PIGSY_SHARD,
	EXEC_ANIM_PIGSY_WIRE,
	EXEC_ANIM_PIGSY_SPIKE,
	EXEC_ANIM_RAMIREZ,
	EXEC_ANIM_JUMP_ATTACK_FISTS,
	EXEC_ANIM_ENVIRONMENTAL_LIQUID_NITROGEN,
	EXEC_ANIM_ENVIRONMENTAL_IRON_MAIDEN,
	EXEC_ANIM_ENVIRONMENTAL_GUILLOTINE,
	EXEC_ANIM_ENVIRONMENTAL_AZTEC_ALTAR,
	EXEC_ANIM_ENVIRONMENTAL_DENTIST_CHAIR,
	EXEC_ANIM_ENVIRONMENTAL_HANGMAN_POLE,
	EXEC_ANIM_ENVIRONMENTAL_WINDOW,
	EXEC_ANIM_ENVIRONMENTAL_TV,
	EXEC_ANIM_ENVIRONMENTAL_FENCE_POLE,
	EXEC_ANIM_ENVIRONMENTAL_TOILET,
	EXEC_ANIM_ENVIRONMENTAL_FUSE_BOX,
	EXEC_ANIM_ENVIRONMENTAL_TOMBSTONE,
	EXEC_ANIM_ENVIRONMENTAL_MANGLER,
	EXEC_ANIM_ENVIRONMENTAL_AGENTPRIME,
	EXEC_ANIM_ENVIRONMENTAL_BATH,
	EXEC_ANIM_ENVIRONMENTAL_DUMPSTER,
	EXEC_ANIM_ENVIRONMENTAL_MAN_HOLE,
	EXEC_ANIM_ENVIRONMENTAL_MEAT_HOOK,
	EXEC_ANIM_ENVIRONMENTAL_OIL_BARREL,
	EXEC_ANIM_ENVIRONMENTAL_PICKET,
	EXEC_ANIM_ENVIRONMENTAL_SINK,
	EXEC_ANIM_ENVIRONMENTAL_VENDING,
	EXEC_ANIM_ENVIRONMENTAL_GASCAN,
	EXEC_ANIM_ENVIRONMENTAL_FIRE_EXTINGUISHER,
	EXEC_ANIM_ENVIRONMENTAL_WOODEN_CHAIR,
	EXEC_ANIM_ENVIRONMENTAL_WOODEN_BLANK,
	EXEC_ANIM_ENVIRONMENTAL_TELEPHONE,
	EXEC_ANIM_ENVIRONMENTAL_DOOR,
	EXEC_ANIM_ENVIRONMENTAL_BROKEN_WINDOW,
	EXEC_ANIM_ENVIRONMENTAL_ROAD_WORKS_BARRIER,
	EXEC_ANIM_ENVIRONMENTAL_LIGHT_FEATURE_OR_PROP,
	EXEC_ANIM_ENVIRONMENTAL_HARVESTER,
	EXEC_ANIM_ENVIRONMENTAL_TV2_BIG_TV,
	EXEC_ANIM_AIREACTION_CLIMBINGPLAYER_1,
	EXEC_ANIM_AIREACTION_CLIMBINGPLAYER_2,
	EXEC_ANIM_AIREACTION_CLIMBINGPLAYER_3,
	EXEC_ANIM_AIREACTION_CLIMBINGPLAYER_4,
	EXEC_ANIM_AIREACTION_CRAWLINGPLAYER_1,
	EXEC_ANIM_AIREACTION_CRAWLINGPLAYER_2,
	EXEC_ANIM_AIREACTION_DRAG_PLAYER_FROM_SHADOWS,
	EXEC_UNDEFINED,

	NUM_EXEC_ANIMS = EXEC_UNDEFINED
};

enum eExecFailState {
	EXEC_FAILSTATE_NO_ANIM_DEAD,
	EXEC_FAILSTATE_NO_ANIM_RECOVER,
	EXEC_FAILSTATE_WOUNDED_TO_RECOVER,
	EXEC_FAILSTATE_ON_KNEES_TO_RECOVER,
	EXEC_FAILSTATE_ON_KNEES_TURNED_TO_RECOVER,
	EXEC_FAILSTATE_WOUNDED_TURNED_TO_RECOVER,
	EXEC_FAILSTATE_WOUNDED_TO_DEAD,
	EXEC_FAILSTATE_WOUNDED_TO_DEAD_TOWARDS_PLAYER,
	EXEC_FAILSTATE_ON_BACK_TO_RECOVER,
	EXEC_FAILSTATE_ON_BACK_TO_DIE,
	EXEC_FAILSTATE_FACING_TOWARDS_PLAYER_TO_DIE,
	EXEC_FAILSTATE_FACING_TOWARDS_PLAYER_TO_RECOVER,
	EXEC_FAILSTATE_PUKE_TO_RECOVER,
	EXEC_FAILSTATE_GET_UP_TO_RECOVER,
	EXEC_FAILSTATE_STANDING_TO_DIE_FACE_DW,
	EXEC_FAILSTATE_STANDING_TO_DIE_FACE_UP
};

class CExecutionDecal {
public:
	float m_fTime;
	char  m_TextureName[20];
	float m_fPosX;
	float m_fPosY;
};

class CWiiExecutionMap {
public:
	uint8 __unk1[151364];

	CExecutionDecal m_aVictimDecals[NUM_EXEC_ANIMS][NUM_EXEC_STAGES][25];
	uint32 m_aVictimDecalsCount[NUM_EXEC_ANIMS][NUM_EXEC_STAGES];

	CExecutionDecal m_aSplatterDecals[NUM_EXEC_ANIMS][NUM_EXEC_STAGES][25];
	uint32 m_aSplatterDecalsCount[NUM_EXEC_ANIMS][NUM_EXEC_STAGES];

	uint8 __unk2[17888];

	inline static CWiiExecutionMap* GetInstance()
	{
		return reinterpret_cast<CWiiExecutionMap* (*)()>(0x4230FF)();
	}
};